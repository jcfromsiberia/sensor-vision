@startuml

!theme toy

box SensorVision App #grey
    participant SensorVisionClient as Client
    participant MetadataState as State
    participant MqttClientWrapper as Mqtt
end box

participant "Mosquitto Broker" as Broker
participant "IoT Agent" as Agent

== Update Sensor ==
-> Client ++: push_value\n[sensor_id]\n[metric_id]\n[value]
note right Client: According to [[https://docs-iot.teamviewer.com/mqtt-api/#51-push-metric-values PushValues]]
Client -> Mqtt --++: Post to /sensor/<sensor_id>/metric/pushValues\n[metric_id] [value]
Mqtt -> Broker --++: <forward> via request_client
Broker -> Agent --++: <forward>
Agent -> Agent : Process Value
Broker <-- Agent ++: Post to /sensor/<sensor_id>/info/inbox\n"Sensor was updated."
Mqtt <-- Broker --++: <forward>
Mqtt -> Mqtt --: Erm... OK...\nGood to know...
Broker <-- Agent --++: Post to /sensor/<sensor_id>/livedata\n[metric_id] [value]
Mqtt <-- Broker --++: <forward>
State <-- Mqtt --++: Call mqtt_callback\n[topic] [message]
State -> State ++: Call Livedata\ncallback
Client <-- State --++: Fire Livedata Event\n[sensor_id]\n[metric_id]\n[value]
deactivate State
<-- Client --: Fire Livedata event

@enduml
