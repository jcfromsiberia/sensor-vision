@startuml

!theme toy

box SensorVision App #grey
    participant SensorVisionClient as Client
    participant MetadataState as State
    participant MqttClientWrapper as Mqtt
end box

participant "Mosquitto Broker" as Broker
participant "IoT Agent" as Agent

== Update Sensor ==
--> Client ++: update_sensor\n[sensor_id]\n[new_sensor_name]
note right Client: According to [[https://docs-iot.teamviewer.com/mqtt-api/#533-update Sensor/Update]]
Client -> Mqtt --++: async_message to /sensor/<sensor_id>/update\n'{"name":"new_sensor_name"}'
Mqtt -> Broker --++: <forward> via request_client
Broker -> Agent --++: <forward>
Agent -> Agent : Update Sensor
Broker <-- Agent --++: "Sensor was changed."
note left Agent #pink
HÃ¤? Really???
How changed?

Useless message
end note
Mqtt <-- Broker --++: <forward>
State <-- Mqtt --++: Call mqtt_callback\n[topic] [message]
State -> State ++: Call SensorUpdate\ncallback
Client <-- State --++: Fire SensorUpdated Event\n[sensor_id]
note over Client #pink
Welp, given we have here only
sensor_id with no name, there
are not many options left
except for reloading metadata.

There are MQTT no calls to
describe sensor by ID :(
end note
deactivate State
Client -> Client ++: load_sensors
note over Client: See load_metadata.puml

@enduml
